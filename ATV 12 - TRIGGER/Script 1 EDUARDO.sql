SET SQL_SAFE_UPDATES = 0;
DROP DATABASE IF EXISTS DBCLASSIFICACAO;
CREATE DATABASE DBCLASSIFICACAO;
USE DBCLASSIFICACAO;

CREATE TABLE ALUNO (
	IDALUNO INT NOT NULL PRIMARY KEY AUTO_INCREMENT
	, NOME VARCHAR(45)
	, IDADE INT
);

CREATE TABLE CLASSIFICACAO (	
	CRIANCAS INT
	, JOVENS INT
	, ADULTOS INT
);

INSERT INTO CLASSIFICACAO VALUES (0,0,0);

DELIMITER $$

-- TRIGGER DE VALIDAÇÃO DA IDADE
CREATE TRIGGER TR_ALUNO_BI BEFORE INSERT ON ALUNO FOR EACH ROW
BEGIN
	IF NEW.IDADE < 1 THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'IDADE INVÁLIDA.';
    END IF;
END $$

-- TRIGGER DE INSERÇÃO 
CREATE TRIGGER TR_ALUNO_AI AFTER INSERT ON ALUNO FOR EACH ROW
BEGIN
	IF NEW.IDADE < 10 THEN
		UPDATE CLASSIFICACAO SET CRIANCAS = CRIANCAS + 1;
    ELSEIF NEW.IDADE >= 10 AND NEW.IDADE <=18 THEN
		UPDATE CLASSIFICACAO SET JOVENS = JOVENS + 1;
    ELSE 
		UPDATE CLASSIFICACAO SET ADULTOS = ADULTOS + 1;
	END IF;
END $$

-- TRIGGER DE UPDATE
CREATE TRIGGER TR_ALUNO_AU AFTER UPDATE ON ALUNO FOR EACH ROW
BEGIN
	IF OLD.IDADE < 10 THEN
		UPDATE CLASSIFICACAO SET CRIANCAS = CRIANCAS - 1;
	ELSEIF OLD.IDADE >=10 AND OLD.IDADE <=18 THEN
		UPDATE CLASSIFICACAO SET JOVENS = JOVENS - 1;
	ELSE 
		UPDATE CLASSIFICACAO SET ADULTOS = ADULTOS - 1;
	END IF;
    IF NEW.IDADE < 10 THEN 
		UPDATE CLASSIFICACAO SET CRIANCAS = CRIANCAS+1;
	ELSEIF NEW.IDADE >=10 AND NEW.IDADE <=18 THEN
		UPDATE CLASSIFICACAO SET JOVENS = JOVENS +1;
	ELSE 
		UPDATE CLASSIFICACAO SET ADULTOS = ADULTOS +1;
	END IF;
END $$
DELIMITER ;

INSERT INTO ALUNO (NOME, IDADE) VALUES ('JOAO', 10);
INSERT INTO ALUNO (NOME, IDADE) VALUES ('MARIA', 8);
INSERT INTO ALUNO (NOME, IDADE) VALUES ('JESSICA', 30);
INSERT INTO ALUNO (NOME, IDADE) VALUES ('PAULO', 21);

SELECT * FROM CLASSIFICACAO;
SELECT * FROM ALUNO;





/*
Regra:
abaixo 10 - Criancas
10 a 18 - Jovens
Acima de 18 - Adulto
*/