SET SQL_SAFE_UPDATES = 0;
DROP DATABASE IF EXISTS DBCLASSIFICACAO;
CREATE DATABASE DBCLASSIFICACAO;
USE DBCLASSIFICACAO;

CREATE TABLE ALUNO (
	IDALUNO INT NOT NULL PRIMARY KEY AUTO_INCREMENT
	, NOME VARCHAR(45)
	, IDADE INT
);

CREATE TABLE CLASSIFICACAO (	
	CRIANCAS INT
	, JOVENS INT
	, ADULTOS INT
);

INSERT INTO CLASSIFICACAO VALUES (0,0,0);

DELIMITER $$

-- TRIGGER DE VALIDACAO INSERT 
CREATE TRIGGER TR_ALUNO_BI BEFORE INSERT ON ALUNO FOR EACH ROW
BEGIN
	IF NEW.IDADE <= 0 THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'IDADE INVÁLIDA!';
	END IF;
END $$

-- TRIGGER VALIDAÇÃO UPDATE
CREATE TRIGGER TR_ALUNO_BU BEFORE UPDATE ON ALUNO FOR EACH ROW
BEGIN
	IF NEW.IDADE <= 0 THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'IDADE INVÁLIDA!';
	END IF;
END $$

-- TRIGGER DE INSERT
CREATE TRIGGER TR_ALUNO_AI AFTER INSERT ON ALUNO FOR EACH ROW
BEGIN
	IF NEW.IDADE < 10 THEN 
		UPDATE CLASSIFICACAO SET CRIANCAS = CRIANCAS + 1;
	ELSEIF NEW.IDADE >= 10 AND NEW.IDADE <= 18 THEN
		UPDATE CLASSIFICACAO SET JOVENS = JOVENS + 1;
	ELSE 
		UPDATE CLASSIFICACAO SET ADULTOS = ADULTOS + 1;
	END IF;
END $$
    
-- TRIGGER DE DELETE
CREATE TRIGGER TR_ALUNO_AD AFTER DELETE ON ALUNO FOR EACH ROW
BEGIN
	IF OLD.IDADE < 10 THEN
		UPDATE CLASSIFICACAO SET CRIANCAS = CRIANCAS - 1;
	ELSEIF OLD.IDADE >= 10 AND OLD.IDADE <= 18 THEN
		UPDATE CLASSIFICACAO SET JOVENS = JOVENS -1;
	ELSE 
		UPDATE CLASSIFICACAO SET ADULTOS = ADULTOS -1;
	END IF;
END $$

-- TRIGGER DE UPDATE
CREATE TRIGGER TR_ALUNO_AU AFTER UPDATE ON ALUNO FOR EACH ROW
BEGIN
	IF OLD.IDADE <> NEW.IDADE THEN
		IF OLD.IDADE < 10 THEN UPDATE CLASSIFICACAO SET CRIANCAS = CRIANCAS -1;
		ELSEIF OLD.IDADE >= 10 AND OLD.IDADE <= 18 THEN UPDATE CLASSIFICACAO SET JOVENS = JOVENS -1;
        ELSE UPDATE CLASSIFICACAO SET ADULTOS = ADULTOS -1;
        END IF;
        IF NEW.IDADE < 10 THEN UPDATE CLASSIFICACAO SET CRIANCAS = CRIANCAS +1;
        ELSEIF NEW.IDADE >= 10 AND NEW.IDADE <=18 THEN UPDATE CLASSIFICACAO SET JOVENS = JOVENS +1;
        ELSE UPDATE CLASSIFICACAO SET ADULTOS = ADULTOS +1;
        END IF;
	END IF;
END $$

DELIMITER ;

-- TESTES DE INSERT OK
INSERT INTO ALUNO (NOME, IDADE) VALUES ('EDU1', 10);
INSERT INTO ALUNO (NOME, IDADE) VALUES ('EDU2', 2);
INSERT INTO ALUNO (NOME, IDADE) VALUES ('EDU3', 18);
INSERT INTO ALUNO (NOME, IDADE) VALUES ('EDU4', 9);
 -- INSERT INTO ALUNO (NOME, IDADE) VALUES ('EDU5', -1); OK!
INSERT INTO ALUNO (NOME, IDADE) VALUES ('EDU6', 32);
INSERT INTO ALUNO (NOME, IDADE) VALUES ('EDU7', 25);
SELECT *, 'ALUNO' FROM ALUNO UNION ALL SELECT *, 'CLASSIF' FROM CLASSIFICACAO;

-- TESTES DE UPDATE OK
# UPDATE ALUNO SET IDADE = -1 WHERE IDALUNO = 1; OK
UPDATE ALUNO SET IDADE = 19 WHERE IDALUNO = 1; 
UPDATE ALUNO SET IDADE = 3 WHERE IDALUNO = 2; 
UPDATE ALUNO SET IDADE = 1 WHERE IDALUNO = 1; 
SELECT *, 'ALUNO' FROM ALUNO UNION ALL SELECT *, 'CLASSIF' FROM CLASSIFICACAO;


-- TESTES DE DELETE OK
DELETE FROM ALUNO WHERE IDALUNO IN (2, 4, 5);
SELECT *, 'ALUNO' FROM ALUNO UNION ALL SELECT *, 'CLASSIF' FROM CLASSIFICACAO;
